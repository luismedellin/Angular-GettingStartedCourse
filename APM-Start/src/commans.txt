

binding:
-interpolation: {{pageTitle}}
we want to display a component class property

-property binding: <img [src]='product.imageUrl'>
when we want to control the DOM by setting a DOM element property in code

Event Binding: we want to responds actions

two-way binding: when user do a change an responde the change

service:
code common in diferent components


this course covers the basics

courses:
-Angular Reactive FOrms: CRUD operations with HTTP
-Angular routing: routes
-Angular component communications: tracking and sharing state and
sending notifications between components, communications between components
-fundamentals: 



--------------------------------
npm start

New module:
ng g m products/product --flat -m app
--------------------------------------
ng: angular cli
g: generate
m: module
products/product:module path/name
--flat: no folder
-m: import in moduleapp.module
--------------------------------------
CREATE src/app/products/product.module.ts (193 bytes)
UPDATE src/app/app.module.ts (1489 bytes)
--------------------------------------

CommonModule: 
-ngFor
-ngIf

FormsModule:
NgModule:
    -Bootstrap: Startup components
    Export:
    Imports
    Providers: service providers 
two-way binding


SharedModule:
reuse module.
-shared pieces


--------------------------------------
ng g m shared/shared --flat -m products/product.module

--------------------------------------

AppModule is the oschester.

--------------------------------------
Root aplication has a AppModule

------------
13: 
CLI: command interface for angular

install:
npm install -g @angular/cli 
-use for any folder

1)new application
ng new hello-world 

e2e: end to end test aplication
node_modules: libraries
src: source folder for our application
assets: images include in the app
    logo
environment: environment for our app 
    production
    produ--> development
favicon: 
index.html
karma.config: sets up karma for unit test
main.ts
polyfills: working with older browsers.
style.css
test.ts unit testing
tsconfig.app.json: ts configuration
tsconfig.spec.json: compiling our test specifications
editor.config: config editor
tslint.json: ts linter, rules 
angular.json-->
--------------------------
ng new --help: help

ng serve: 


package.json
    name
    start --> comando para ejecutar con npm

ng serve --help: 
()appShell:
()application:
(cl)class: simple classes
(c)component: componets with external template and style sheet files
(d)directive: custom directives
(e)enum: enumeraciones
(g)guard:
(i)interface: interface
()library:
(m)module: modules
(p)pipe: pipes
(s)service: services
()serviceWorker:
()universal:
()webWorker:

ng g c welcome--> create new folder
------------------
ng test: run karma test runner
ng e2e: run end to end testing

ng build: build application for deployment
ng build --prod: build with cache-bushting